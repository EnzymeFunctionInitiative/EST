Color SSN
=========

Clusters in the submitted SSN are identified, numbered and colored. Summary
tables, sets of IDs and sequences per cluster are provided for sequences
identified by a UniProt ID.

The clusters are numbered and colored using two conventions: 

    1. **Sequence Count:** Cluster Number assigned in order of decreasing number
       of UniProt IDs in the cluster.
    2. **Node Count Cluster Number:** assigned in order of decreasing number of
       nodes in the cluster.

Running the Pipeline
--------------------

Generating a Parameter File
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Color SSN pipeline is configured through a YAML (or JSON) file containing
parameters. The parameter file may be created manually or by running
``bin/create_colorssn_nextflow_params.py``. An example usage of the command: ::

   python bin/create_colorssn_nextflow_params.py --output-dir results/ --ssn-input full_ssn.xgmml --efi-config efi.config --efi-db efi_db.sqlite

The pipeline may then be executed with the file generated by this command::
   
   nextflow run pipelines/colorssn/colorssn.nf -params-file results/params.yml

Generating a Job Script
~~~~~~~~~~~~~~~~~~~~~~~
To run in a cluster environment, use ``bin/create_nextflow_job.py`` to generate a
SLURM job script which runs the pipeline. The command would use the ``colorssn``
subcommand: ::

   python bin/create_nextflow_job.py colorssn --output-dir results. --ssn-input full_ssn.xgmml --efi-config efi.config --efi-db efi_db.sqlite

This can then be submitted to the cluster with ::

   sbatch run_nextflow.sh

Further Reading
---------------

.. toctree::
   create_colorssn_nextflow_params
   :maxdepth: 1